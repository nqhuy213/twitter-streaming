{"version":3,"sources":["../../src/filter-service-2/registerSocket.js"],"names":["require","searchTweets","deleteRules","registerSocket","server","app","io","console","log","clientConnectionIds","Set","connections","on","socket","add","id","keywords","ownRules","Stream","db","newStream","socketId","rules","save","findOneAndDelete","then","deletedStream","res","error","module","exports"],"mappings":";;;;;;;;AAAA,eAAsCA,OAAO,CAAC,aAAD,CAA7C;AAAA,IAAQC,YAAR,YAAQA,YAAR;AAAA,IAAsBC,WAAtB,YAAsBA,WAAtB;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqC;AACnC,MAAMC,EAAE,GAAGN,OAAO,CAAC,WAAD,CAAP,CAAqBI,MAArB,CAAX;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAH,EAAAA,GAAG,CAACC,EAAJ,GAASA,EAAT;AACAD,EAAAA,GAAG,CAACI,mBAAJ,GAA0B,IAAIC,GAAJ,EAA1B;AACA,MAAMC,WAAW,GAAG,IAAID,GAAJ,EAApB;AACAJ,EAAAA,EAAE,CAACM,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9BF,IAAAA,WAAW,CAACG,GAAZ,CAAgBD,MAAhB;AACAR,IAAAA,GAAG,CAACI,mBAAJ,CAAwBK,GAAxB,CAA4BD,MAAM,CAACE,EAAnC;AACAR,IAAAA,OAAO,CAACC,GAAR,kBAAsBK,MAAM,CAACE,EAA7B;;AACA,QAAI;AACFF,MAAAA,MAAM,CAACD,EAAP,CAAU,WAAV;AAAA,iGAAuB,iBAAOI,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEEf,YAAY,CAACe,QAAD,CAFd;;AAAA;AAEfC,kBAAAA,QAFe;AAGfC,kBAAAA,MAHe,GAGNb,GAAG,CAACc,EAAJ,CAAOD,MAHD;AAIfE,kBAAAA,SAJe,GAIH,IAAIF,MAAJ,CAAW;AAAEG,oBAAAA,QAAQ,EAAER,MAAM,CAACE,EAAnB;AAAuBO,oBAAAA,KAAK,EAAEL;AAA9B,mBAAX,CAJG;AAAA;AAAA,yBAKfG,SAAS,CAACG,IAAV,EALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvB;;AAAA;AAAA;AAAA;AAAA;AAQAV,MAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,6FAAwB;AAAA;AAAA;AAAA;AAAA;AACtBD,gBAAAA,WAAW,UAAX,CAAmBE,MAAnB;AACAR,gBAAAA,GAAG,CAACI,mBAAJ,WAA+BI,MAAM,CAACE,EAAtC;AACA;;AACAV,gBAAAA,GAAG,CAACc,EAAJ,CAAOD,MAAP,CAAcM,gBAAd,CAA+B;AAC7BH,kBAAAA,QAAQ,EAAER,MAAM,CAACE;AADY,iBAA/B,EAEGU,IAFH,CAEQ,UAACC,aAAD,EAAmB;AACzBxB,kBAAAA,WAAW,CAACwB,aAAa,CAACJ,KAAf,CAAX,CAAiCG,IAAjC,CAAsC,UAACE,GAAD,EAAS;AAC7CpB,oBAAAA,OAAO,CAACC,GAAR,qBAAyBkB,aAAa,CAACL,QAAvC;AAEA;;AAEAd,oBAAAA,OAAO,CAACC,GAAR,kBAAsBK,MAAM,CAACE,EAA7B;AACD,mBAND;AAOD,iBAVD;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;AAgBD,KAzBD,CAyBE,OAAOa,KAAP,EAAc;AACdrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA,YAAMA,KAAN;AACD;AACF,GAjCD;AAkCD;;AAEDC,MAAM,CAACC,OAAP,GAAiB3B,cAAjB","sourcesContent":["const { searchTweets, deleteRules } = require(\"../libs/api\");\r\n\r\nfunction registerSocket(server, app) {\r\n  const io = require(\"socket.io\")(server);\r\n  console.log(\"---- Connecting Socket ----\");\r\n  app.io = io;\r\n  app.clientConnectionIds = new Set();\r\n  const connections = new Set();\r\n  io.on(\"connection\", (socket) => {\r\n    connections.add(socket);\r\n    app.clientConnectionIds.add(socket.id);\r\n    console.log(`Socket ${socket.id} connected.`);\r\n    try {\r\n      socket.on(\"streaming\", async (keywords) => {\r\n        /** Store socket and keywords in db */\r\n        const ownRules = await searchTweets(keywords);\r\n        const Stream = app.db.Stream;\r\n        const newStream = new Stream({ socketId: socket.id, rules: ownRules });\r\n        await newStream.save();\r\n      });\r\n\r\n      socket.on(\"disconnect\", async function () {\r\n        connections.delete(socket);\r\n        app.clientConnectionIds.delete(socket.id);\r\n        /** Delete in database */\r\n        app.db.Stream.findOneAndDelete({\r\n          socketId: socket.id,\r\n        }).then((deletedStream) => {\r\n          deleteRules(deletedStream.rules).then((res) => {\r\n            console.log(`To delete ${deletedStream.socketId}`);\r\n\r\n            /** Delete rules in Twitter */\r\n\r\n            console.log(`Socket ${socket.id} disconnected`);\r\n          });\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw error;\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = registerSocket;\r\n"],"file":"registerSocket.js"}