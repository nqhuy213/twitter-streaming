{"version":3,"sources":["../../src/stream-service/registerStream.js"],"names":["needle","require","twitterStreamUrl","registerStream","app","stream","get","headers","Authorization","process","env","TWITTER_TOKEN","timeout","console","log","on","data","tweet","JSON","parse","io","emit","error","code","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,gBAAgB,GACpB,4EADF;;AAGA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAP,CAAWJ,gBAAX,EAA6B;AAC1CK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAAf,KADiC;AAE1CC,IAAAA,OAAO,EAAE;AAFiC,GAA7B,CAAf;AAIAR,EAAAA,GAAG,CAACC,MAAJ,GAAaA,MAAb;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAT,EAAAA,MAAM,CACHU,EADH,CACM,MADN,EACc,UAACC,IAAD,EAAU;AACpB;AACA,QAAI;AACF,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAd,CADE,CAEF;;AACAZ,MAAAA,GAAG,CAACgB,EAAJ,CAAOC,IAAP,CAAY,MAAZ,EAAoBJ,KAApB;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc,CAAE;AACnB,GARH,EASGP,EATH,CASM,KATN,EASa,YAAM;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAXH,EAYGC,EAZH,CAYM,OAZN,EAYe,UAACO,KAAD,EAAW;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;;AACA,QAAIA,KAAK,CAACC,IAAN,KAAe,WAAnB,EAAgC;AAC9BlB,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ;AACD;AACF,GAjBH;AAkBD;;AAEDG,MAAM,CAACC,OAAP,GAAiBtB,cAAjB","sourcesContent":["const needle = require(\"needle\");\r\n\r\nconst twitterStreamUrl =\r\n  \"https://api.twitter.com/2/tweets/search/stream?tweet.fields=public_metrics\";\r\n\r\nfunction registerStream(app) {\r\n  const stream = needle.get(twitterStreamUrl, {\r\n    headers: { Authorization: `Bearer ${process.env.TWITTER_TOKEN}` },\r\n    timeout: 20000,\r\n  });\r\n  app.stream = stream;\r\n  console.log(\"---- Stream Registered ----\");\r\n  stream\r\n    .on(\"data\", (data) => {\r\n      /** Emit the raw Tweets data to all socket clients */\r\n      try {\r\n        const tweet = JSON.parse(data);\r\n        // console.log(tweet);\r\n        app.io.emit(\"data\", tweet);\r\n      } catch (error) {}\r\n    })\r\n    .on(\"end\", () => {\r\n      console.log(\"end\");\r\n    })\r\n    .on(\"error\", (error) => {\r\n      console.log(error);\r\n      if (error.code === \"ETIMEDOUT\") {\r\n        stream.emit(\"timeout\");\r\n      }\r\n    });\r\n}\r\n\r\nmodule.exports = registerStream;\r\n"],"file":"registerStream.js"}